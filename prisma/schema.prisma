generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model notes {
  id        Int      @id @unique @default(autoincrement())
  body      String
  auth_user AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id   String

  @@map("notes")
}

model users {
  id        Int      @id @unique @default(autoincrement())
  email     String
  auth_user AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)
  user_id   String

  @@map("users")
}

model AuthUser {
  id           String        @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  // here you can add custom fields for your user
  // e.g. name, email, username, roles, etc.
  users        users[]
  notes        notes[]
  name         String

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  active_expires BigInt
  idle_expires   BigInt
  user_id        String
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  primary_key     Boolean
  expires         BigInt?
  user_id         String
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}
